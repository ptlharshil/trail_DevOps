"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const toDate_1 = __importDefault(require("./toDate"));
const humanize_1 = __importDefault(require("./humanize"));
const toLocalTime_1 = __importDefault(require("./toLocalTime"));
const toTitleCase_1 = __importDefault(require("./toTitleCase"));
const truncateText_1 = __importDefault(require("./truncateText"));
const objectDifference_1 = __importDefault(require("./objectDifference"));
const validateNotNull_1 = __importDefault(require("./validateNotNull"));
const removeDuplicated_1 = __importDefault(require("./removeDuplicated"));
const install = () => {
    if (!Object.prototype.hasOwnProperty.call(Array, 'toDate')) {
        Object.defineProperty(Array.prototype, 'toDate', {
            value() {
                return (0, toDate_1.default)(this);
            },
        });
    }
    if (!Object.prototype.hasOwnProperty.call(String, 'humanize')) {
        Object.defineProperty(String.prototype, 'humanize', {
            value() {
                return (0, humanize_1.default)(this);
            },
        });
    }
    if (!Object.prototype.hasOwnProperty.call(Date, 'toLocalTime')) {
        Object.defineProperty(Date.prototype, 'toLocalTime', {
            value() {
                return (0, toLocalTime_1.default)(this);
            },
        });
    }
    if (!Object.prototype.hasOwnProperty.call(String, 'toLocalTime')) {
        Object.defineProperty(String.prototype, 'toLocalTime', {
            value() {
                return (0, toLocalTime_1.default)(this);
            },
        });
    }
    if (!Object.prototype.hasOwnProperty.call(String, 'toTitleCase')) {
        Object.defineProperty(String.prototype, 'toTitleCase', {
            value() {
                return (0, toTitleCase_1.default)(this);
            },
        });
    }
    if (!Object.prototype.hasOwnProperty.call(String, 'truncateText')) {
        Object.defineProperty(String.prototype, 'truncateText', {
            value(complement, length) {
                return (0, truncateText_1.default)(complement, this, length);
            },
        });
    }
    if (!Object.prototype.hasOwnProperty.call(Object, 'objectDifference')) {
        Object.defineProperty(Object.prototype, 'objectDifference', {
            value(toCompare) {
                return (0, objectDifference_1.default)(this, toCompare);
            },
        });
    }
    if (!Object.prototype.hasOwnProperty.call(Object, 'validateNotNull')) {
        Object.defineProperty(Object.prototype, 'validateNotNull', {
            value() {
                return (0, validateNotNull_1.default)(this);
            },
        });
    }
    if (!Object.prototype.hasOwnProperty.call(Array, 'removeDuplicated')) {
        Object.defineProperty(Array.prototype, 'removeDuplicated', {
            value(prop) {
                return (0, removeDuplicated_1.default)(this, prop);
            },
        });
    }
};
exports.default = install;
